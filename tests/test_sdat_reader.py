import pytest
from src.file_readers import SDATReader

def setup_function():
    global reader
    reader = SDATReader('test_sdat_file.xml')

def test_get_document_id():
    assert reader.get_document_id() == "eslevu121963_BR2294_ID742"

def test_get_interval():
    assert reader.get_interval() == ('2019-03-11T23:00:00Z', '2019-03-12T23:00:00Z')

def test_get_resolution():
    assert reader.get_resolution() == ('15', 'MIN')

def test_get_observations():
    expected_observations = [('1', '3.000'), ('2', '2.700'), ('3', '3.000'), ('4', '1.800'), ('5', '0.900'), ('6', '0.600'), ('7', '0.900'), ('8', '0.600'), ('9', '0.600'), ('10', '0.600'), ('11', '0.900'), ('12', '0.600'), ('13', '0.600'), ('14', '0.900'), ('15', '0.600'), ('16', '0.600'), ('17', '0.900'), ('18', '0.600'), ('19', '0.600'), ('20', '0.900'), ('21', '0.600'), ('22', '0.600'), ('23', '0.600'), ('24', '0.900'), ('25', '1.200'), ('26', '1.500'), ('27', '1.500'), ('28', '2.700'), ('29', '3.000'), ('30', '4.500'), ('31', '4.200'), ('32', '4.500'), ('33', '4.800'), ('34', '5.400'), ('35', '4.500'), ('36', '4.200'), ('37', '3.900'), ('38', '3.900'), ('39', '4.500'), ('40', '4.200'), ('41', '4.800'), ('42', '5.100'), ('43', '4.200'), ('44', '4.200'), ('45', '4.200'), ('46', '2.100'), ('47', '0.600'), ('48', '0.300'), ('49', '0.000'), ('50', '0.000'), ('51', '0.300'), ('52', '0.300'), ('53', '0.000'), ('54', '0.000'), ('55', '0.300'), ('56', '0.300'), ('57', '0.300'), ('58', '0.300'), ('59', '0.600'), ('60', '1.500'), ('61', '0.000'), ('62', '2.100'), ('63', '0.900'), ('64', '0.300'), ('65', '0.900'), ('66', '0.600'), ('67', '0.600'), ('68', '0.900'), ('69', '0.600'), ('70', '0.600'), ('71', '0.600'), ('72', '0.900'), ('73', '1.200'), ('74', '1.200'), ('75', '2.400'), ('76', '2.100'), ('77', '3.000'), ('78', '2.700'), ('79', '1.200'), ('80', '0.900'), ('81', '0.900'), ('82', '0.600'), ('83', '0.900'), ('84', '0.600'), ('85', '1.200'), ('86', '0.600'), ('87', '0.900'), ('88', '0.900'), ('89', '1.800'), ('90', '1.200'), ('91', '2.700'), ('92', '2.400'), ('93', '2.700'), ('94', '2.700'), ('95', '2.100'), ('96', '0.600')]
    assert reader.get_observations() == expected_observations